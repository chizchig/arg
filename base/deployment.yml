apiVersion: v1
kind: ServiceAccount
metadata:
  name: trivial-service-account
  namespace: argocd
imagePullSecrets:
  - name: trivial-access-token

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: trivial-deployment
  namespace: argocd
  labels:
    app: trivial-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: trivial-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: trivial-app
    spec:
      serviceAccountName: trivial-service-account
      imagePullSecrets:
        - name: trivial-access-token
      securityContext:         # Pod-level security context
        fsGroup: 1000          # Ensure group ownership of mounted volumes
      initContainers:
        - name: fix-permission
          image: busybox
          command: ['sh', '-c', 'mkdir -p /var/cache/nginx/client_temp && chmod -R 777 /var/cache/nginx']
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx
      containers:
        - name: coco
          image: shadowhub/cocomaster:20240506044802
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: nginx-storage
              mountPath: /var/run
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 64m
              memory: 25Mi
          readinessProbe:
            httpGet:
              path: /healthz
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 5
          securityContext:
            runAsNonRoot: true  # Ensure the container doesn't run as root
            runAsUser: 1000      # Set non-root user
      volumes:
        - name: nginx-cache
          emptyDir: {}  # Temporary storage for NGINX cache